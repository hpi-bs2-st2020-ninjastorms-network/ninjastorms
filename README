
This is ninjastorms "NinjaStorms"
==============================

NinjaStorms is an attempt to create a simple RealTime Operating System which
is currently running on Lego Mindstorms EV3 and a virtualized environment.

Building from Source:

  ninjastorms uses (mostly) standard autotools to manage the build process.
  to configure the sources, you need to execute the configure script. If you
  checked out the sources from the repository, or there is no configure script
  present for any other reason, you can generate it by executing

    $> ./autogen.sh

  To configure the project, execute

    $> ./configure --host=<host> BOARD=<board> \
           CFLAGS="-nostdlib -nostartfiles -ffreestanding"

  where <host> is the appropriate host triplet for the target architecture,
  for example arm-none-eabi for the EV3 or the qemu environments and <board>
  is a supported board - see Supported Boards.

  This step requires a <host> prefixed toolchain capable of generating
  executables for your target architecture. To generate a <host> prefixed
  toolchain, in case your distribution does not provide one,
  see our [generate-toolchain](https://github.com/ninjastorms/toolchain-generator) project.

  Correct host values for the several boards are listed in Supported Boards.

  For example, to configure ninjastorms for qemu virtual deployment, execute

    $> ./configure --host=arm-none-eabi BOARD=versatilepb \
           CFLAGS="-nostdlib -nostartfiles -ffreestanding -mcpu=ARM926EJ-s"

  Assuming a working toolchain for your architecture and a configured source
  tree, the project is built by executing

    $> make

  When the build completes, the kernel binary can be found in the source tree
  as a file named `ninjastorms`.

Deployment:

  See Supported Boards for details on the deployment processes for different
  board configurations.

Further Reading:

  The kernel entry point is the kernel_main function in kernel/main.c - this
  should be a good place to start reading into the sorce code.

  We also collected information on the different supported boards in the
  [hardware-docs](https://github.com/ninjastorms/hardware-docs) project.

  Additional documentation can be found in our github wiki:
  https://github.com/ninjastorms/ninjastorms/wiki

Getting involved:

  ninjastorms is open source and pull requests and new issues are always welcome!
  Find us on github: https://github.com/ninjastorms/ninjastorms/

Supported Boards:

  ninjastorms is currently supported on the following target boards. If your
  favourite platform is missing, feel free to port the system and send us a
  pull request!

  `ev3` - Lego Mindstorms EV3
    target platform: arm-none-eabi

    deployment process: TODO

  `qemu` - embedded arm virtualization using qemu
    target platform: arm-none-eabi

    deployment process:
      the following qemu call executes the built kernel directly:

      $> qemu-system-arm -M versatilepb -m 128M -nographic -kernel ninjastorms

      the hardware access to the device periphery will fail silently, but the
      kernel output will still be shown.
